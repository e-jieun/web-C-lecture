    *{margin:0; padding:0; box-sizing: border-box;}

    :root {
      --color-1: rgb(142, 142, 142);
      --color-2:rgb(196, 196, 196);
      --color-3:rgb(87, 87, 87);
    }


    
    body {
      width:100vw;
      height:100vh;
    }

    header {
      width:100vw;
      height:10vh;
      display:flex;
      flex-direction: row;
    }

    header > div:nth-child(1) {
      width:65vw;
      height:inherit;
      background-color:var(--color-1);
    } 

    header > div:nth-child(2) {
      width:35vw;
      height:inherit;
      background-color:var(--color-2);
    }

    main {
      width:100vw;
      height:80vh;
      display:flex;
      flex-direction: row;
    }

    main > div:nth-child(1) {
      width:10vw;
      height:inherit;
      background-color:var(--color-1);
    }

    main > div:nth-child(2) {
      width:2vw;
      height:inherit;
      background-color:var(--color-3);
    }

    main > div:nth-child(3) {
      width:68vw;
      height:inherit;
      background-color:rgb(232, 232, 232);
      display:flex;
      justify-content: center;
      align-items: center;
    }

    /* inline block 개념만 알고 써본적이 없었습니다 */

    /* check point position

    inline-block 값은 flex가 등장하면서부터 위상이 많이 떨어졌습니다.
    flex가 지원하는 속성들이 디자인 작업에서 맞아 떨어졌기 때문입니다.

    inline의 특성 : 사이즈를 지정할 수 없다.(content의 결정크기가 곧 사이즈로 결정되는)
    block의 특성 : 융통성이 떨어지지만, 값으로 핸들링 할 수 있다.

    이 두가지의 특징을 조합한 '사이즈'도 지정할 수 있는 inline 특성을 가지게 되어
    flex 등장전, 마치 inline 처럼 가로배치와 같은 일들을 가능하게끔 실현 시켰습니다.
    
    실제로 flex 값이 등장하기전 제작된 웹사이트의 메뉴부분은 대부분 inline-block으로 <li> 태그들을 가로 배치하는 방법을 매우 많이 사용합니다.
    
    
    
    
    */



    
    main > div:nth-child(3) > div {
      width:55vw;
      height:40vh;
      display:inline-block;
      overflow: hidden;
      color:var(--color-3);
    }
    
    main > div:nth-child(3) > div > h1 {
      font-size:100px;
      font-weight:normal;
    }
    
    main > div:nth-child(3) div > h2 {
      font-size:28px;
      font-weight: normal;
    }

    main > div:nth-child(3) div > p {
      font-size:16px;
    }

    main > div:nth-child(4) {
      width:20vw;
      height:inherit;
      background-color:var(--color-3);
      display:flex;
      flex-direction: column;

    }

    main > div:nth-child(4) > div:nth-child(1) {
      width:inherit;
      height:5vh;
      background-color: rgb(63, 63, 63);
    }

    main > div:nth-child(4) > div:nth-child(2) {
      width:inherit;
      height:67vh;
    }


    main > div:nth-child(4) > div:nth-child(3) {
      width:inherit;
      height:8vh;
      background-color: rgb(63, 63, 63);
    }


    main > div:nth-child(5) {
      width:10vw;
      height:inherit;
      background-color:var(--color-2);
    }

    footer {
      width:100vw;
      height:10vh;
      display:flex;
      flex-direction: row;
    }

    footer > div:nth-child(1) {
      width:65vw;
      height:inherit;
      background-color:var(--color-1);
    }

    footer > div:nth-child(2) {
      width:35vw;
      height:inherit;
      background-color:var(--color-2);
    }
